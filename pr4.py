print('''# Упражнение 15. Сортировка трех чисел. Напишите программу, запрашивающую
# у пользователя три целых числа и выводящую их в упорядоченном виде
# – по возрастанию. Используйте функции min и max для нахождения наименьшего
# и наибольшего значений. Оставшееся число можно найти путем вычитания из
# суммы трех введенных чисел максимального и минимального.
''')

a = int(input('Введите первое число \t'))
b = int(input('Введите второе число \t'))
c = int(input('Введите третье число \t'))

mini = min(a, b, c)
maxi = max(a, b, c)
midi = a + b + c - maxi - mini
print('Сортировка по возрастанию: \n 1. \t', mini, '\n 2. \t', midi, '\n 3. \t', maxi)
print('*' * 50)
print('''# Упражнение 16. Вчерашний хлеб.
# Пекарня продает хлеб по $3,49 за буханку.
# Скидка на вчерашний хлеб составляет 60 %. Напишите программу, которая
# будет запрашивать у пользователя количество приобретенных вчерашних
# буханок хлеба. В вывод на экран должны быть включены обычная цена
# за буханку, цена со скидкой и общая стоимость приобретенного хлеба.
# Все значения должны быть выведены на отдельных строках
# с соответствующими описаниями. Используйте для вывода формат с двумя
# знаками после запятой и выровненным разделителем.
''')
price = 3.49
discount = 0.6 * price
buy = int(input('Сколько вчерашних буханок вы купили? \t'))
print('''
Цена буханки \t''', price,'$', 'Цена со скидкой\t', round(discount, 2), '$''''
Вы купили \t''', buy,'$', 'буханок и потратили бы \t''', round(buy * price, 2), '$', '''
Однако вы потратили\t''', round(discount * buy, 2), '$', ' и сэкономили\t', round(buy * price - buy * discount, 2), '$')
print('*' * 50)
print('''
# Упражнение 21. Счет за телефон. Тарифный план мобильной связи включает
# в себя 50 минут разговоров и 50 смс-сообщений за $15,00 в месяц. Каждая
# дополнительная минута стоит $0,25, а каждое дополнительное сообщение – $0,15.
# Все счета за телефон включают налог на поддержку кол-центров 911 в размере $0,44,
# и общая сумма, включающая сумму отчислений кол-центрам, облагается налогом
# в размере 5 %. Напишите программу, которая будет запрашивать у пользователя
# количество израсходованных за месяц минут разговора и смс-сообщений и
# отображать базовую сумму тарификации, сумму за дополнительные минуты и сообщения,
# сумму отчислений кол-центрам 911, налог, а также итоговую сумму к оплате.
# При этом дополнительные звонки и сообщения необходимо выводить на экран только
# в случае их расходования. Убедитесь в том, что все суммы отображаются в формате
# с двумя знаками после запятой.
''')

mins_count = 50
sms_count = 50
price = 15
mins_over = 0.25
sms_over = 0.15
tax_911 = 0.44
tax_percent = 0.05

mins = int(input('Сколько минут вы потратили?\t'))
sms = int(input('Сколько cмс вы потратили?\t'))
d_mins = mins - mins_count
d_sms = sms - sms_count
if d_mins < 0:
    d_mins = 0
if d_sms < 0:
    d_sms = 0

dop_mins = round((d_mins * mins_over), 2)
tax_mins = round((d_mins * mins_over * tax_percent), 2)
dop_sms = round((d_sms * sms_over), 2)
tax_sms = round((d_sms * sms_over * tax_percent), 2)

# print('\nВаш счёт за базовый тариф', round(price, 2), '$ составляет: ',
#       round(price + tax_911 + (price + tax_911) * tax_percent, 2),
#       '$')
if mins <= mins_count and sms <= sms_count:
    print('Вы не использовали пакет минут и смс полностью')
if mins > mins_count:
    print('Вы потратили', d_mins, 'минут сверх пакета. Доплата по тарифу составит: ',
          dop_mins, '$ + НДС:', tax_mins, '$')
if sms > sms_count:
    print('Вы потратили', d_sms, 'смс сверх пакета. Доплата по тарифу составит: ', dop_sms, '$ + НДС:', tax_sms, '$')
total = round((price + dop_mins + dop_sms), 2)
total_tax = round((tax_sms + tax_mins + tax_911 * tax_percent + price * tax_percent), 2)
print('Итого: ', total, '$\n', tax_911, '$ налог на кол-центр 911\n',
      total_tax, '$ остальной налог\n', round((total + total_tax + tax_911), 2), '$ к оплате')
print('*' * 50)

print('''
# Упражнение 22. Високосный год? В большинстве случаев год насчитывает 365 дней.
# пройти по своей орбите вокруг Солнца. В результате для компенсации этой разницы
# был введен дополнительный день в феврале для особых годов, называемых високосными.
# Определить, високосный год или нет, можно, следуя такому алгоритму:
# если год делится на 400 без остатка, он високосный;
# если год (из оставшихся) делится на 100 без остатка,сон НЕ високосный;
# если год (из оставшихся) делится на 4 без остатка, он високосный;

# все остальные года не являются високосными. Напишите программу, запрашивающую год
# у пользователя и выводящую сообщение о том, високосный ли он.
''')
flag = 0
year = int(input('Введите год'))
if year % 4 == 0 and year % 100 == 0 and year % 400 != 0:
    print('Год обычный')
elif year % 4 == 0:
    print('Год високосный')
else:
    print('Год обычный')
print('*' * 50) # как выйти из этой программы?

print('''
# Упражнение 23. Следующий день. Разработайте программу, принимающую на вход дату и
# выводящую на экран дату, следующую за ней. Например, если пользователь введет дату,
# соответствующую 18 ноября 2019 года, на экран должен быть выведен следующий день,
# то есть 19 ноября 2019 года. Если входная дата будет представлять 30 ноября,
# то на выходе мы должны получить 1 декабря. И наконец, если ввести последний
# день года – 31 декабря 2019-го, пользователь должен увидеть на экране дату
# 1 января 2020-го. Дату пользователь должен вводить в три этапа: год, месяц и день.
# Убедитесь, что ваша программа корректно обрабатывает високосные годы.
''')

# date = int(input('Введите день'))
# month = int(input('Введите месяц цифрой'))
# year = int(input('Введите год'))

date, month, year = int(input('Введите день')), int(input('Введите месяц цифрой')), int(input('Введите год'))

datz = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
monz_text = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',
             'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']
monz = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

if year % 400 == 0 or (year % 4 == 0 and year % 100 != 0):  # загугленный код вискокосности в 1 строку
    vys = 1
    datz[1] = 29
else:
    vys = 0

if month > 12 or month < 1:
    print('Неверная дата, попробуйте снова')
    exit()
if date > datz[month - 1]:
    print('Неверная дата, попробуйте снова')
    exit()
print()
print('Вы ввели', date, monz_text[month - 1], year, 'г.')

if date == 31 and month == 12:
    print('C Новым Годом! Завтра ', 1, monz_text[0], year + 1, 'г.')
else:
    if date + 1 <= datz[month - 1]:  # проверка на количество дней в мес
        print('Завтра ', date + 1, monz_text[month - 1], year, 'г.')
    else:
        print('Завтра ', 1, monz_text[month], year, 'г.')  # если больше - переносим на след месяц
print('*' * 50)

print('''
# Упражнение 25. Среднее значение. В данном упражнении вы должны написать программу
# для подсчета среднего значения всех введенных пользователем чисел. Индикатором
# окончания ввода будет служить ноль. При этом программа должна выдавать соответствующее
# сообщение об ошибке, если первым же введенным пользователем значением будет ноль.
# Подсказка. Поскольку ноль является индикатором окончания ввода, его не нужно учитывать
# при расчете среднего.
''')

integer = None
mid = 0
count = 0
my_list = []
while integer != 0:
    integer = int(input('Введите значение. \t "0" - Прекратить ввод'))
    my_list.append(integer)
    if integer < 0:
        print('Вводите только положительные значения. Данный ввод будет удален')
        my_list.pop(-1)
my_list.pop(-1)
for num in my_list:
    mid += num
    count += 1
print('Среднее значение = ', round((mid / count), 2))
print('*' * 50)

print('''
# Упражнение 28. Никаких центов. 4 февраля 2013 года Королевским канадским монетным двором
# была выпущена последняя монета номиналом в один цент. После вывода центов из обращения
# все магазины вынуждены были изменить цены на товары таким образом, чтобы они стали кратны
# пяти центам (расчеты по банковским картам по-прежнему ведутся с учетом центов). И хотя
# продавцы вольны сами определять политику преобразования цен, большинство из них просто
# округлили цены до ближайших пяти центов. Напишите программу, запрашивающую
# у пользователя цены, пока не будет введена пустая строка. На первой строке выведите
# сумму всех введенных пользователем сумм, а на второй – сумму, которую покупатель
# должен заплатить наличными. Эта сумма должна быть округлена до ближайших пяти центов.
# Вычислить сумму для оплаты наличными можно, получив остаток от деления общей суммы
# в центах на 5. Если он будет меньше 2,5, следует округлить сумму вниз, а если больше – вверх
''')

my_list = []
summa = 0
while True:
    str_price = input('Введите цену в $\t')
    if not str_price:  # если пользователь не ввел данные
        break
    price = float(str_price)
    my_list.append(price)
for price in my_list:
    summa += price
print('Всего товаров на сумму', round(summa, 3), '$')
cent = summa * 100
okr = cent % 5
if okr < 2.5:
    summa = (cent - cent % 5) / 100
    print('Округленная сумма вниз', summa)
else:
    summa = (cent + 5 - cent % 5) / 100
    print('*' * 10, 'долго думал', '*' * 10)
    print('Округленная сумма вверх', summa)
print('*' * 50)

print('''
# Упражнение 29. Билеты в зоопарк. В зоопарке цена входного билета зависит от
# возраста посетителя. Дети до двух лет допускаются бесплатно. Дети в возрасте от трех
# до 12 лет могут посещать зоопарк за $14,00. Пенсионерам старше 65 лет вход обойдется в $18,00,
# а обычный взрослый билет стоит $23,00. Напишите программу, которая будет запрашивать возраст
# всех посетителей в группе (по одному за раз) и выводить общую цену билетов для посещения
# зоопарка этой группой. В качестве индикатора окончания ввода можно по традиции использовать
# пустую строку. Общую цену билетов стоит выводить в формате с двумя знаками после запятой.
''')

free = 0, 1, 2
kids_age = []
adults_age = []
oldies_age = []
kids_price = 14
adults_price = 23
oldies_price = 18
kids_count = 0
adults_count = 0
oldies_count = 0
free_count = 0
i = []

for i in range(3, 13):
    kids_age.append(i)
for i in range(13, 66):
    adults_age.append(i)
for i in range(66, 100):  # возрасты вне трёх диапазонов будут проигнорированы
    oldies_age.append(i)
str_age = None
while True:
    str_age = input('Введите возраст\t')
    if not str_age:  # если пользователь не ввел данные
        print('-' * 20)
        print('Конец ввода')
        print('-' * 20)
        break
    age = int(str_age)
    if age in free:
        free_count += 1
    if age in kids_age:
        kids_count += 1
    if age in adults_age:
        adults_count += 1
    if age in oldies_age:
        oldies_count += 1
print()
print('Бесплатных билетов\t\t', free_count)
print('Детских билетов\t\t\t', kids_count, '\tна сумму ', '%.2f' % (kids_count * kids_price), '$')
print('Взрослых билетов\t\t', adults_count, '\tна сумму ', '%.2f' % (adults_count * adults_price), '$')
print('Пенсионных билетов\t\t', oldies_count, '\tна сумму ', '%.2f' % (oldies_count * oldies_price), '$')
total = kids_count * kids_price + adults_count * adults_price + oldies_count * oldies_price
print('Итого билетов: \t\t\t', free_count + kids_count + adults_count + oldies_count, 'на сумму ', '%.2f' % total,
      '$')

print()
print('*' * 50)
